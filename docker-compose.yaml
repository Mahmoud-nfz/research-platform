name: research-platform

services:
  minio:
    extends: 
      file: apps/object-storage-solution/docker-compose.yml
      service: minio
    networks:
      - minio_network
  
  wrapper:
    extends: 
      file: apps/object-storage-solution/docker-compose.yml
      service: go-wrapper
    hostname: wrapper
    environment:
      - BACKEND_URL=${BACKEND_URL}
    networks:
      - app_network
      - minio_network

  db:
    image: postgres:16
    restart: on-failure
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - db_network

  frontend:
    build:
      dockerfile: ./apps/frontend/Dockerfile
    restart: on-failure
    depends_on:
      - backend
    ports:
      - 3010:3000
    env_file:
      - apps/frontend/.env.example
    environment:
      - BACKEND_URL=${BACKEND_URL}
      - MINIO_WRAPPER_HTTP_URL=${MINIO_WRAPPER_HTTP_URL}
    networks:
      - app_network

  backend:
    build:
      dockerfile: ./apps/backend/Dockerfile
    restart: on-failure
    depends_on:
      - db
      - elasticsearch
    ports:
      - 3011:3011
    env_file:
      - apps/backend/.env.example
    environment:
      - NODE_ENV=development
      - DB_URI=${DB_URI}
      - ELASTICSEARCH_NODE=${ELASTICSEARCH_NODE}
      - FRONTEND_URL=${FRONTEND_URL}
      - MINIO_WRAPPER_WS_URL=${MINIO_WRAPPER_WS_URL}
      - MINIO_WRAPPER_HTTP_URL=${MINIO_WRAPPER_HTTP_URL}
    networks:
      - db_network
      - es_network
      - app_network
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - es_network

  adminer:
    image: adminer:4.8.1
    restart: on-failure
    ports:
      - 8080:8080
    networks:
      - db_network
      - es_network

volumes:
  db_data:
    driver: local
  elastic_data:
    driver: local

networks:
  db_network:
  es_network:
  app_network:
  minio_network:
